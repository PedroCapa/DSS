package ClassesInterface;

import Classes.*;
import Exceptions.*;
import java.awt.Font;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableModel;

/**
 * Classe que permite ao utilizador ver os dados do carro e confirmar a sua compra
 */
public class ConfirmaCompra extends javax.swing.JFrame {
    /** Variáveis de instância que contêm informação sobre o sistema */
    private ConfiguraFacil cf;
    private Cliente cliente;
    private Modelo modelo;
    private Pacote pacote;
    private List<Peca> pecas;
    /**
     * Construtor vazio
     */
    public ConfirmaCompra() {
        initComponents();
    }
    /**
     * Construtor parametrizado
     * 
     * @param cf Classe que contém informação sobre o sistema
     * 
     * @param cliente Variável que contém informação sobre o cliente
     * 
     * @param modelo Variável que contém informação sobre o modelo
     * 
     * @param pacote Variável que contém informação sobre o pacote
     * 
     * @param pecas Lista das pecas que o carro a ser comprado contém
     */
    public ConfirmaCompra(ConfiguraFacil cf, Cliente cliente, Modelo modelo, Pacote pacote, List<Peca> pecas){
        this();
        this.cf = cf;
        this.cliente = cliente;
        this.modelo = modelo;
        this.pacote = pacote;
        this.pecas = pecas;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Confirmar = new javax.swing.JButton();
        Voltar = new javax.swing.JButton();
        dados = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        pecasEsc = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        modeloEsc = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Confirmar.setText("Confirmar Compra");
        Confirmar.setToolTipText("Confirmar Compra");
        Confirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarActionPerformed(evt);
            }
        });

        Voltar.setText("Voltar");
        Voltar.setToolTipText("Voltar atrás");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });

        dados.setText("Ver dados carro");
        dados.setToolTipText("Ver os dados que escolheu para comprar o carro");
        dados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dadosActionPerformed(evt);
            }
        });

        pecasEsc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Peca"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(pecasEsc);

        modeloEsc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Modelo", "Preco"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(modeloEsc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 149, Short.MAX_VALUE)
                        .addComponent(Voltar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Confirmar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Confirmar, Voltar, dados});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirmar)
                    .addComponent(Voltar)
                    .addComponent(dados))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método que permite ao utilizador voltar ao menu principal a partir do menu "ConfirmaCompra"
     * 
     * @param evt evento associado ao botão "Voltar"
     */
    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_VoltarActionPerformed
    /**
     * Método que confirma uma ação correspondente ao botão "Confirmar" 
     * 
     * @param evt evento associado ao botão "Confirmar"
     */
    private void ConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarActionPerformed
        try{
            float custo;
            if(this.pacote == null){
                custo = this.cf.calculaPreco(this.modelo, this.pecas);
            }
            else{
                custo = this.cf.calculaPreco(this.pacote, this.modelo, this.pecas);
            }
            Carro car = this.cf.comprarCarro(this.pecas, this.modelo, this.pacote, custo, this.cliente);
            this.setVisible(false);
            this.dispose();
        }
        catch(PecaNaoExisteException e){
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Dados incorretos", 0);
        }
    }//GEN-LAST:event_ConfirmarActionPerformed
    /**
     * Método que permite ver os dados do carro a ser comprado
     * 
     * @param evt evento associado ao botão "Ver dados carro"
     */
    private void dadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dadosActionPerformed
        try{
            DefaultTableModel tabPeca = (DefaultTableModel)pecasEsc.getModel();
            int tam = this.pecas.size();
            if(tam == 0 && this.pacote == null){
                tabPeca.addRow(new String[]{null});
            }
            else{
                tabPeca.setRowCount(0);
                for(int i = 0; i < tam; i++){
                    Peca peca = this.pecas.get(i);
                    tabPeca.addRow(new String[]{peca.getNome()});
                }
                if(this.pacote!= null)
                    for(Peca peca: this.cf.stringToPeca(this.pacote.getPecas())){
                        tabPeca.addRow(new String[]{peca.getNome()});
                }
                this.pecasEsc.setModel(tabPeca);
            }
            DefaultTableModel info = (DefaultTableModel)modeloEsc.getModel();
            info.setRowCount(0);
            info.addRow(new String[]{this.modelo.getNome(), Float.toString(this.cf.calculaPreco(this.pacote, this.modelo, this.pecas))});
            this.modeloEsc.setModel(info);
        }
        catch(PecaNaoExisteException e){
            javax.swing.JOptionPane.showMessageDialog(this, e.getMessage(), "Dados incorretos", 0);
        }
    }//GEN-LAST:event_dadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConfirmaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConfirmaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConfirmaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConfirmaCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConfirmaCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirmar;
    private javax.swing.JButton Voltar;
    private javax.swing.JButton dados;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable modeloEsc;
    private javax.swing.JTable pecasEsc;
    // End of variables declaration//GEN-END:variables
}
